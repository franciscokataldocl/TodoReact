{"version":3,"sources":["components/Form.js","components/MenuItems.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","AddTodo","setStatus","text","completed","id","Date","now","className","onChange","e","target","value","type","placeholder","onClick","preventDefault","name","MenuItems","statusHandler","innerHTML","menuItems","document","querySelectorAll","i","length","classList","remove","add","Todo","todo","filter","el","map","item","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","localStorage","setItem","JSON","stringify","getItem","todoFromLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.08050537.chunk.js","sourcesContent":["import React from 'react'\n\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\n\n  //functions-----------------------------------------------------------\n\n  //function for inputText\n  const inputTextHandler = (e) => {\n    //pasamos el valor del input al prop setinputtext que corresponde\n    //al manejador de estado de app.js\n    setInputText(e.target.value);\n  }\n\n  //function for submit (add todo)\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    //setTodos es un arreglo vacio al inicio (app.js estado)\n    if (inputText !== '') {\n      AddTodo()\n    }\n    //vaciar input luego de agregar\n    setInputText('');\n\n  }\n\n\n  //crear arreglo con todo nuevo\n  const AddTodo = () => {\n    setTodos([\n      //hacemos un spread de todos, que seria.. toma todo lo que haya en todos\n      //y agregale un nuevo objeto con lo que tiene el input, \n      //con la propiedad completed en false por default\n      // y el id que sea la fecha exacta en que se hizo click al boton agregar\n      //todo esto al dar click en agregar\n      ...todos, {\n        text: inputText,\n        completed: false,\n        id: Date.now()\n      }\n    ]);\n  }\n\n\n\n\n\n\n\n  return (\n    <div className=\"row bg-blue p-4 d-flex justify-content-center\">\n      <div className=\"col \">\n        <form >\n          <div className=\"form-group m-0\">\n            <input onChange={inputTextHandler}\n              //value input text toma el estado de input\n              //lo vacia, despues de dar click en add\n              value={inputText}\n              type=\"text\"\n              className=\"form-control input-todo\"\n              placeholder=\"Agrega una tarea\" />\n          </div>\n          <button onClick={submitTodoHandler}\n            className=\"plus-button animate shadow-1 d-flex justify-content-center align-items-center\"><ion-icon name=\"add\"></ion-icon></button>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Form\n","import React from 'react'\n\nconst MenuItems = ({ setStatus }) => {\n\n\n\n\n    const statusHandler = (e) => {\n\n        setStatus(e.target.innerHTML)\n        let menuItems = document.querySelectorAll('.menu-item');\n\n\n        for (let i = 0; i < menuItems.length; i++) {\n\n            if (menuItems[i] !== e.target) {\n                menuItems[i].classList.remove('active-menu')\n            }\n        }\n        e.target.classList.add('active-menu');\n\n\n    }\n    return (\n        <>\n            <div className=\"row d-flex justify-content-center align-items-center\">\n                <article>\n\n                    <ul className=\"list-menu d-flex justify-content-between align-items-center py-2\">\n                        <li onClick={statusHandler} className=\"px-4 animate menu-item active-menu\">Todas</li>\n                        <li onClick={statusHandler} className=\"px-4 animate menu-item\">Completadas</li>\n                        <li onClick={statusHandler} className=\"px-4 animate menu-item \">Pendientes</li>\n                    </ul>\n                </article>\n            </div>\n            <hr />\n        </>\n    )\n}\n\nexport default MenuItems\n","import React from 'react'\n\nconst Todo = ({ text, todo, todos, setTodos }) => {\n\n\n  //functions\n\n  const deleteHandler = () => {\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(todos.map(item => {\n      if (item.id === todo.id) {\n        return { ...item, completed: !item.completed }\n      }\n      return item;\n    }))\n\n  };\n\n\n\n\n\n\n  return (\n    <>\n      <div className=\"card animate mb-4 overflow-hidden\">\n        <div className=\"card-body\" >\n          <div className=\"row\">\n            <div className={`col-lg-9 col-md-9 col-sm-12  px-4 py-3 d-flex align-items-center ${todo.completed ? \" bg-green\" : ''}`}>\n              <p className={`m-0 ${todo.completed ? \"c-white\" : ''}`}>{text}</p>\n            </div>\n            <div className=\"col-lg-3 col-md-3 col-sm-12 button-action-container d-flex justify-content-center align-items-center\">\n              <ul className=\"button-actions m-0\">\n                <li onClick={deleteHandler} className=\"delete animate\"><ion-icon name=\"trash\"></ion-icon></li>\n                <li onClick={completeHandler} className={`complete animate ${todo.completed ? \"d-none\" : ''}`}><ion-icon name=\"checkmark\"></ion-icon></li>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div >\n\n\n    </>\n  )\n}\n\nexport default Todo\n","import React from 'react'\nimport Todo from './Todo'\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n\n    return (\n\n        <div className=\"row w-100 row-cards\">\n\n\n            {filteredTodos.map((todo) => {\n                return <Todo\n                    text={todo.text}\n                    key={todo.id}\n                    todo={todo}\n                    todos={todos}\n                    setTodos={setTodos}\n                />\n            })}\n\n\n        </div>\n\n\n\n\n    )\n}\n\nexport default TodoList\n","import React, { useState, useEffect } from 'react';\n//components\nimport Form from './components/Form';\nimport MenuItems from './components/MenuItems';\nimport TodoList from './components/TodoList';\n\n//estilos\nimport './Estilos.css';\n\n\nfunction App() {\n\n\n  //state for input text\n  const [inputText, setInputText] = useState('');\n  //state for todos (tareas)\n  const [todos, setTodos] = useState([]);\n\n  //state for filtering todos\n  const [status, setStatus] = useState(\"all\");\n\n  //state for filters\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n\n  useEffect(() => {\n    //functions\n    const filterHandler = () => {\n      //console.log(status)\n      switch (status) {\n        case 'Completadas':\n          setFilteredTodos(todos.filter(todo => todo.completed === true))\n          break;\n        case 'Pendientes':\n          setFilteredTodos(todos.filter(todo => todo.completed === false))\n          break;\n        default:\n          setFilteredTodos(todos)\n          break;\n      }\n    }\n\n    //save to local\n    const saveLocalTodos = () => {\n\n      localStorage.setItem('todos', JSON.stringify(todos));\n\n    }\n\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status])\n\n\n\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n\n    } else {\n      //localStorage.getItem('todos', JSON.stringify(todos));\n      //obtengo lo que hay en el localstorage\n      //json.parse convierte texto en objeto\n      let todoFromLocal = JSON.parse(localStorage.getItem('todos'))\n      //console.log(todoFromLocal)\n      setTodos(todoFromLocal)\n\n    }\n\n\n  }\n\n\n\n\n\n  return (\n    <div className=\"container bg-white container-app shadow-app\">\n\n      <Form\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n\n      />\n      <MenuItems\n        setStatus={setStatus}\n\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}